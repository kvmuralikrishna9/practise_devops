
# ReplicationController and ReplicaSet and deply

# ReplicationController and ReplicaSet both works same, but RS have caplability to add "matchExpression".
# Deploment works same as ReplicaSet, but deployment have caplability to rollback to previos version.

# kubectl get [rc/rs/deploy] [rc_n/rs_n/d_n]			to get rc(ReplicationController)/rs(ReplicaSet)
# kubectl describe [rc/rs/deploy] [rc_n/rs_n/d_n]		to describe rc(ReplicationController)/rs(ReplicaSet)
# kubectl get pods
# kubectl get pods --show-labels				shows all the pods with labels
# kubectl scale --replicas=4 [rc/rs/deploy] [rc_n/rs_n/d_n]  	to scale the pods in rc(ReplicationController)/rs(ReplicaSet)
# kubectl scale --replicas=3 [rc/rs/deploy] -l env=dev-env     	using labels(-l) to scale the pods in rc(ReplicationController)/rs(ReplicaSet) 
# kubectl delete [rc/rs/deploy] [rc_n/rs_n/d_n]			to delete the rc(ReplicationController)/rs(ReplicaSet)

# For Rollout
# kubectl rollout history deployment d_n
# kubectl rollout status deployment d_n						
# kubectl rollout undo deployment d_n			      To rollout to last revision/version
# kubectl rollout undo deployment d_n --to-revision=2	      To rollout to specific revision/version


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 10-c-deployment
  annotations:
    describe: last updatei
    kubernetes.io/change-cause: Initial Release-v3.0

  labels:
    env: dev-env
    class: deployments
    team: dev-ops

spec:
  replicas: 3
  selector:
    matchExpressions:
      - key: env
        operator: In
        values: [dev-env]
  template:
    metadata:
      labels:
        env: dev-env
    spec:
      containers:
        - name: 10-c-deployment
          image: nginx
          ports:
            - containerPort: 85
          command: ["/bin/bash", "-c", "while true ; do echo 10-c-deployment ; sleep 10 ; done"]
          resources:
            limits:
              memory: "64Mi"
              cpu: "100m"
      nodeSelector:
       ec2type: t2.medium
