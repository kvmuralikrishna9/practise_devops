- name: Creating catalogue microservice
  hosts: catalogue
  user: ansible
  become: true

  tasks:
    - name: Adding Nodejs repo
      ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash

    - name: installing nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: installed
      
    - name: checking user roboshop existing status
      ansible.builtin.command: id roboshop
      register: userexist
      ignore_errors: true

    - when: userexist.rc != 0
      name: Creating roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: checking app directory existing status
      ansible.builtin.stat:
        path: /app
      register: directoryexist

    - name: Print directoryexist output
      ansible.builtin.debug:
        msg: "output: {{ directoryexist }}"

    - when: directoryexist.stat.exists == False
      name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download application code for catalogue 
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp

    - name: unarchive the catalogue code
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: changing the directory
      ansible.builtin.command: npm install
      args:
          chdir: /app

    - name: adding catalogue daemon service file.
      ansible.builtin.copy:
        src: config_files/catalogue.service
        dest: /etc/systemd/system/

    - name: Reloading daemon services
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start & enable catalogue service
      ansible.builtin.service:
        name: catalogue
        state: started
        enabled: true

    - name: adding mongodb repo
      ansible.builtin.copy:
        src: config_files/mongodb.repo
        dest: /etc/dnf.repos.d/

    - name: install mondodb clinet
      ansible.builtin.dnf:
        name: mongodb-mongosh
        state: installed

    # - name: uninstall mondodb clinet
    #   ansible.builtin.dnf:
    #     name: mongodb-mongosh
    #     state: absent
        
    # - name: Installing openssl3
    #   ansible.builtin.dnf: 
    #     name: mongodb-mongosh-shared-openssl3
    #     state: present
        
    # - name: install mondodb clinet
    #   ansible.builtin.dnf:
    #     name: mongodb-mongosh
    #     state: installed

    # - name: Install mongosh 
    #   ansible.builtin.shell: dnf install mongodb-mongosh

    # - name: remove mongosh
    #   ansible.builtin.shell: dnf remove mongodb-mongosh

    # - name: Installing openssl
    #   ansible.builtin.shell: dnf install mongodb-mongosh-shared-openssl3

    # - name: Install mongosh 
    #   ansible.builtin.shell: dnf install mongodb-mongosh

    # - name: restarting catalogue service
    #   ansible.builtin.service:
    #     name: catalogue
    #     state: restarted



    - name: Rename openssl_1
      ansible.builtin.shell: mv /etc/pki/tls/openssl.cnf /etc/pki/tls/old_openssl.cnf

    - name: Rename openss_2
      ansible.builtin.shell: mv /etc/ssl/openssl.cnf /etc/ssl/old_openssl.cnf
      
    - name: Load Schema
      ansible.builtin.command: mongosh --host mongodb.vrpproducts.online < /app/schema/catalogue.js

    - name: restarting catalogue service
      ansible.builtin.service:
        name: catalogue.service
        state: restarted